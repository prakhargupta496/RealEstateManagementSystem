#!/usr/bin/env node

var _        = require('underscore')._,
    program  = require("commander"),
    pacman   = require("../lib/pacman");

/*
 * Parse command line flags.
 */
program
  .version(pacman.version)
  .option("")
  .option("-d, --dev",   "serve content directly from source folder")
  .option("-b, --build", "build a complete version, with packed assets")
  .option("-s, --sync",  "sync target dir to remote server or local dir")
  .option("")
  .option("--port   <port>", "change dev server port    (default 3000)")
  .option("--config <path>", "change config file        (default ./config.js)")
  .option("--source <path>", "change source directory   (default ./content)")
  .option("--target <path>", "change target directory   (default ./public)")
  .option("--remote <path>", "set remote server address (no default)")
  .option("--silent",        "suppress cli output       (default false)")
  .parse(process.argv);

/*
 * If no options are given, show the help prompt.
 */
if(!program.dev && !program.build && !program.sync) {
  program.help();
}

/*
 * Override config with command line flags.
 */
var config = pacman.config(_.extend({ silent: false }, _.pick(program, [
  "dev", "build", "sync", "port", "config", "source", "target", "remote", "silent"
])));

/*
 * Decide what to do.
 */
if(config.build) pacman.build();
if(config.sync)  pacman.sync();
if(config.dev)   pacman.dev();
